// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: Transaction.proto

package protobufForTestCase

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CurrencyType int32

const (
	CurrencyType_CURRENCY_UNDEFINED CurrencyType = 0
	CurrencyType_CURRENCY_USDT      CurrencyType = 1
	CurrencyType_CURRENCY_RUB       CurrencyType = 2
	CurrencyType_CURRENCY_EUR       CurrencyType = 3
	CurrencyType_CURRENCY_USD       CurrencyType = 4
	CurrencyType_CURRENCY_BTC       CurrencyType = 5
)

// Enum value maps for CurrencyType.
var (
	CurrencyType_name = map[int32]string{
		0: "CURRENCY_UNDEFINED",
		1: "CURRENCY_USDT",
		2: "CURRENCY_RUB",
		3: "CURRENCY_EUR",
		4: "CURRENCY_USD",
		5: "CURRENCY_BTC",
	}
	CurrencyType_value = map[string]int32{
		"CURRENCY_UNDEFINED": 0,
		"CURRENCY_USDT":      1,
		"CURRENCY_RUB":       2,
		"CURRENCY_EUR":       3,
		"CURRENCY_USD":       4,
		"CURRENCY_BTC":       5,
	}
)

func (x CurrencyType) Enum() *CurrencyType {
	p := new(CurrencyType)
	*p = x
	return p
}

func (x CurrencyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurrencyType) Descriptor() protoreflect.EnumDescriptor {
	return file_Transaction_proto_enumTypes[0].Descriptor()
}

func (CurrencyType) Type() protoreflect.EnumType {
	return &file_Transaction_proto_enumTypes[0]
}

func (x CurrencyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurrencyType.Descriptor instead.
func (CurrencyType) EnumDescriptor() ([]byte, []int) {
	return file_Transaction_proto_rawDescGZIP(), []int{0}
}

type ActionType int32

const (
	ActionType_ACTION_UNDEFINED ActionType = 0
	ActionType_ACTION_ADD       ActionType = 1
	ActionType_ACTION_SUB       ActionType = 2
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_UNDEFINED",
		1: "ACTION_ADD",
		2: "ACTION_SUB",
	}
	ActionType_value = map[string]int32{
		"ACTION_UNDEFINED": 0,
		"ACTION_ADD":       1,
		"ACTION_SUB":       2,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_Transaction_proto_enumTypes[1].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_Transaction_proto_enumTypes[1]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_Transaction_proto_rawDescGZIP(), []int{1}
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId       int32        `protobuf:"varint,2,opt,name=CustomerId,proto3" json:"CustomerId,omitempty"`
	Currency         CurrencyType `protobuf:"varint,3,opt,name=Currency,proto3,enum=Customer_service.CurrencyType" json:"Currency,omitempty"`
	Number_Invoice   string       `protobuf:"bytes,4,opt,name=Number_Invoice,json=NumberInvoice,proto3" json:"Number_Invoice,omitempty"`
	Amount           int32        `protobuf:"varint,5,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Action           ActionType   `protobuf:"varint,6,opt,name=Action,proto3,enum=Customer_service.ActionType" json:"Action,omitempty"`
	Number_InvoiceTo string       `protobuf:"bytes,7,opt,name=Number_InvoiceTo,json=NumberInvoiceTo,proto3" json:"Number_InvoiceTo,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_Transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_Transaction_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Transaction) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *Transaction) GetCurrency() CurrencyType {
	if x != nil {
		return x.Currency
	}
	return CurrencyType_CURRENCY_UNDEFINED
}

func (x *Transaction) GetNumber_Invoice() string {
	if x != nil {
		return x.Number_Invoice
	}
	return ""
}

func (x *Transaction) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_UNDEFINED
}

func (x *Transaction) GetNumber_InvoiceTo() string {
	if x != nil {
		return x.Number_InvoiceTo
	}
	return ""
}

var File_Transaction_proto protoreflect.FileDescriptor

var file_Transaction_proto_rawDesc = []byte{
	0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x99, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x34, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x2a, 0x81, 0x01, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55,
	0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x55,
	0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55, 0x53, 0x44, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x52, 0x55, 0x42, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x45, 0x55, 0x52, 0x10,
	0x03, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55, 0x53,
	0x44, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f,
	0x42, 0x54, 0x43, 0x10, 0x05, 0x2a, 0x42, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x10, 0x02, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6c, 0x6f, 0x76, 0x65, 0x70, 0x69, 0x74,
	0x73, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x46, 0x6f, 0x72, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Transaction_proto_rawDescOnce sync.Once
	file_Transaction_proto_rawDescData = file_Transaction_proto_rawDesc
)

func file_Transaction_proto_rawDescGZIP() []byte {
	file_Transaction_proto_rawDescOnce.Do(func() {
		file_Transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_Transaction_proto_rawDescData)
	})
	return file_Transaction_proto_rawDescData
}

var file_Transaction_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_Transaction_proto_goTypes = []interface{}{
	(CurrencyType)(0),   // 0: Customer_service.CurrencyType
	(ActionType)(0),     // 1: Customer_service.ActionType
	(*Transaction)(nil), // 2: Customer_service.Transaction
}
var file_Transaction_proto_depIdxs = []int32{
	0, // 0: Customer_service.Transaction.Currency:type_name -> Customer_service.CurrencyType
	1, // 1: Customer_service.Transaction.Action:type_name -> Customer_service.ActionType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_Transaction_proto_init() }
func file_Transaction_proto_init() {
	if File_Transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Transaction_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Transaction_proto_goTypes,
		DependencyIndexes: file_Transaction_proto_depIdxs,
		EnumInfos:         file_Transaction_proto_enumTypes,
		MessageInfos:      file_Transaction_proto_msgTypes,
	}.Build()
	File_Transaction_proto = out.File
	file_Transaction_proto_rawDesc = nil
	file_Transaction_proto_goTypes = nil
	file_Transaction_proto_depIdxs = nil
}
